setwd("D:/Dropbox/stomach_isthmus_eunmin/github/CELL-STEM-CELL-isthmus-stem-cells/scRNAseq/source/STMN4567/1.cellcycle_corrected")
##### Code for Stomach Single-cell stmn RNA-seq data
##### Author: Eunmin Lee (elee4472@dgist.ac.kr)
##### Last Update: 2019/07/04
library(ggplot2)
library(SC3)
library(Rtsne)
library(scater)
data_path = "../../../data/STMN4567"
setwd(data_path)
load(file="CC_scaled_from_normlog2cd_4567_rebuttal.RData")
load("hvg4567_cc_rebuttal.RData")
load("ensemblGenes2017-10-30.RData")
## tSNE
## tSNE
PERPLEXITY = 50
set.seed(601) #601
Y = Rtsne(t(CC_scaled_from_normlog2cd[hvg_cc,]), max_iter=5000, verbose=TRUE, pca_scale=TRUE, pca_center=TRUE, perplexity=PERPLEXITY)
scesetFiltered = SingleCellExperiment(assays=list(counts =CC_scaled_from_normlog2cd, logcounts=CC_scaled_from_normlog2cd))
rowData(scesetFiltered)$feature_symbol = ensemblGenes[rownames(scesetFiltered), "external_gene_name"]
attributes(scesetFiltered@reducedDims)$listData$TSNE = Y$Y
cellColor = c("#d73027", "#4575b4")
par(mar=c(5,5,1,1), cex.axis=1.5, cex.lab=1.5)
plot(attributes(scesetFiltered@reducedDims)$listData$TSNE[,1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[,2], pch=20, col="black",
xlab="Component 1", ylab="Component 2", cex=1.5)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23002", 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23002", 2], pch=20, col=cellColor[1], cex=1.5)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23003", 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23003", 2], pch=20, col=cellColor[2], cex=1.5)
legend(-60, -50, c("23002", "23003"),
pch=20,
col=cellColor, bty="n", cex=1)
cellColor = c("#d73027", "#4575b4")
par(mar=c(5,5,1,1), cex.axis=1.5, cex.lab=1.5)
plot(attributes(scesetFiltered@reducedDims)$listData$TSNE[,1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[,2], pch=20, col="black",
xlab="Component 1", ylab="Component 2", cex=1.5)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23002", 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23002", 2], pch=20, col=cellColor[1], cex=1.5)
attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]
)
colData(scesetFiltered)[,"condition"]
scesetFiltered = readRDS(file = paste("scsetFiltered_CC_4567TSNEP",PERPLEXITY,"_rebuttal.rds",sep=""))
scesetFiltered = readRDS(file = paste("scsetFiltered_CC_4567TSNEP",PERPLEXITY,"_rebuttal.rds",sep=""))
cellColor = c("#d73027", "#4575b4")
par(mar=c(5,5,1,1), cex.axis=1.5, cex.lab=1.5)
plot(attributes(scesetFiltered@reducedDims)$listData$TSNE[,1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[,2], pch=20, col="black",
xlab="Component 1", ylab="Component 2", cex=1.5)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23002", 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23002", 2], pch=20, col=cellColor[1], cex=1.5)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23003", 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[colData(scesetFiltered)[,"condition"]=="23003", 2], pch=20, col=cellColor[2], cex=1.5)
colData(scesetFiltered)
colnames(colData(scesetFiltered))
colnames(scesetFiltered)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[grepl("^23002",colnames(scesetFiltered)), 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[grepl("^23002",colnames(scesetFiltered)), 2], pch=20, col=cellColor[1], cex=1.5)
points(attributes(scesetFiltered@reducedDims)$listData$TSNE[grepl("^23003",colnames(scesetFiltered)), 1],
attributes(scesetFiltered@reducedDims)$listData$TSNE[grepl("^23003",colnames(scesetFiltered)), 2], pch=20, col=cellColor[2], cex=1.5)
load("sc3set4567_CC_rebuttal.RData")
i = est_k
cluster_sc3 = as.factor(sc3set$sc3_6_clusters) # sc3_k_clusters #if cluster # is changed, this also should be changed.
df = data.frame(x=attributes(scesetFiltered@reducedDims)$listData$TSNE[,1],
y=attributes(scesetFiltered@reducedDims)$listData$TSNE[,2],
expression=cluster_sc3)
est_k = 6
i = est_k
cluster_sc3 = as.factor(sc3set$sc3_6_clusters) # sc3_k_clusters #if cluster # is changed, this also should be changed.
df = data.frame(x=attributes(scesetFiltered@reducedDims)$listData$TSNE[,1],
y=attributes(scesetFiltered@reducedDims)$listData$TSNE[,2],
expression=cluster_sc3)
ggplot(df,aes(x=x, y=y, colour=expression)) +
geom_point(size=2.5) +
# scale_colour_manual(values=clust.col) +
ylab("Component 2") +
xlab("Component 1") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
##### Code for Stomach Single-cell stmn RNA-seq data
##### Author: Eunmin Lee (elee4472@dgist.ac.kr)
##### Last Update: 2019/07/04
library(umap)
library(zoo)
library(reshape2)
library(slingshot)
library(plotly)
data_path = "../../../data/STMN4567"
setwd(data_path)
load("CC_scaled_from_normlog2cd_4567_rebuttal.RData")
deg_csv = read.csv("NL_PN_SL_markers.csv")
degene = as.vector(deg_csv[,2])
load("ensemblGenes2017-10-30.RData")
newclusters_45 = read.csv("newclusterid_cellname_181025.csv",header=TRUE, stringsAsFactors = F)
newclusters = rep(0,ncol(CC_scaled_from_normlog2cd))
names(newclusters) = colnames(CC_scaled_from_normlog2cd)
newclusters[newclusters_45[,1]] = newclusters_45[,2]
newclusters = as.factor(newclusters)
newclusters_4567 = factor(newclusters[newclusters %in% c(1,2,3,4,5,6)])
custom.settings = umap.defaults
custom.settings$n_components =3
load(file="umap_res.RData")
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
colors = gg_color_hue(6)
umap_xy = data.frame(x=umap_res$layout[,2],
y=umap_res$layout[,3]
)
t(umap_res$layout)
colors = gg_color_hue(6)
df = data.frame(x=umap_xy$x,
y=umap_xy$y,
expression=newclusters_4567)
ggplot(df,aes(x=x, y=y, colour=expression)) +
geom_point() +
scale_colour_manual(values = colors ) +
ylab("Component 2") +
xlab("Component 1") +
# ggtitle(gene_names[target_genes[i],"external_gene_name"]) +
theme_bw() +
theme(    plot.title = element_text(hjust = 0.5,size = 40),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
plot.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line = element_blank(),
axis.ticks=element_blank(),
# legend.position="none",
plot.margin=unit(c(0,3,0,0),"cm")
)
sling = slingshot(umap_res$layout,
newclusters_4567, start.clus=4, end.clus = c("3","6"))
df = data.frame(x=umap_res$layout[,1],
y=umap_res$layout[,2],
z=umap_res$layout[,3],
xl1=sling@curves$curve1$s[,1],
yl1=sling@curves$curve1$s[,2],
zl1=sling@curves$curve1$s[,3],
xl2=sling@curves$curve2$s[,1],
yl2=sling@curves$curve2$s[,2],
zl2=sling@curves$curve2$s[,3],
cluster = factor(newclusters_4567)
)
ax <- list(
title = "",
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
publication_color = c("1"="#F8766D",
"2"="#B79F00",
"3"="#00BA38",
"4"="#00BFC4",
"5"="#619CFF",
"6"="#F564E3")
plot_ly(df) %>%
add_trace(x=~x, y=~y, z= ~z, color = ~cluster, mode = "markers", marker = list( size = 4), colors = publication_color) %>%
add_trace(x=~xl1, y=~yl1, z= ~zl1,marker = list( size = 4),color = I("red")) %>%
add_trace(x=~xl2, y=~yl2, z= ~zl2,marker = list( size = 4),color = I("red")) %>%
layout(scene = list(xaxis=ax,yaxis=ax,zaxis=ax,camera = list(eye = list(x = 1, y = 1, z =0.5))))
publication_color = c("1"="#F8766D",
"2"="grey",
"3"="grey",
"4"="grey",
"5"="grey",
"6"="grey")
plot_ly(df ) %>%
add_trace(x=~x, y=~y, z= ~z, color = ~cluster, mode = "markers", marker = list( size = 4), colors = publication_color) %>%
add_trace(x=~xl1, y=~yl1, z= ~zl1,marker = list( size = 4),color = I("red")) %>%
add_trace(x=~xl2, y=~yl2, z= ~zl2,marker = list( size = 4),color = I("red"))%>%
layout(scene = list(xaxis=ax,yaxis=ax,zaxis=ax,camera = list(eye = list(x = 1, y = 1, z =0.5))))
publication_color = c("1"="grey",
"2"="#B79F00",
"3"="grey",
"4"="grey",
"5"="grey",
"6"="grey")
plot_ly(df ) %>%
add_trace(x=~x, y=~y, z= ~z, color = ~cluster, mode = "markers", marker = list( size = 4), colors = publication_color) %>%
add_trace(x=~xl1, y=~yl1, z= ~zl1,marker = list( size = 4),color = I("red")) %>%
add_trace(x=~xl2, y=~yl2, z= ~zl2,marker = list( size = 4),color = I("red")) %>%
layout(scene = list(xaxis=ax,yaxis=ax,zaxis=ax,camera = list(eye = list(x = 1, y = 1, z =0.5))))
slingPseudotime(sling)
curve1_pseudotime_4_to_3 = slingPseudotime(sling)[,1]
curve1_pseudotime_4_to_3 = curve1_pseudotime_4_to_3[!is.na(curve1_pseudotime_4_to_3)]
curve2_pseudotime_4_to_6 = slingPseudotime(sling)[,2]
curve2_pseudotime_4_to_6 = curve2_pseudotime_4_to_6[!is.na(curve2_pseudotime_4_to_6)]
geneList_sym = c("Mki67","Stmn1", "Muc6", "Muc5ac")
geneList = ensemblGenes$ensembl_gene_id[which(ensemblGenes$external_gene_name %in% geneList_sym)]
features.plot = geneList
cd =  CC_scaled_from_normlog2cd
#curve1_pseudotime_4_to_3
TSmat = matrix(data=NA, nrow=length(features.plot),
ncol=length(colnames(cd[,names(curve1_pseudotime_4_to_3)])),
dimnames = list(features.plot, colnames(cd[,names(curve1_pseudotime_4_to_3)])))
rownames(TSmat) = ensemblGenes[features.plot,"external_gene_name"]
for(i in features.plot){
y = cd[i,names(curve1_pseudotime_4_to_3)[order(curve1_pseudotime_4_to_3)]]
Y_hat = rollapply(y,20, mean, align = 'center',fill = 'extend')
TSmat[ensemblGenes[i,"external_gene_name"],] = Y_hat
}
df.TSmat = data.frame(t(TSmat), x = 1:length(colnames(cd[,names(curve1_pseudotime_4_to_3)])))
df.TSmat.long <- melt(df.TSmat, id=c("x"))
ggplot(data = df.TSmat.long, aes(x=x, y=value, color=variable)) +
geom_line() +
ylab("Auto exprs") +
xlab("Cell order") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.position = "right",
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
data_path = "../../../data/STMN4567"
setwd(data_path)
#library loading
# library(WGCNA) # dynamic cut X
# library(flashClust)          X
# library(slingshot) # slingshot
# library(dplyr) # slingshot
# library(plotly) # slingshot
library(ggplot2)
library(pheatmap)
library(Seurat)
library(amap)
library(dplyr)
library(RColorBrewer)
#data loading
scesetFiltered = readRDS(file = "scsetFiltered4567TSNEP50.rds")
load("CC_scaled_from_normlog2cd_4567_rebuttal.RData")
load("ensemblGenes2017-10-30.RData")
newclusters_45 = read.csv("newclusterid_cellname_181025.csv",header=TRUE, stringsAsFactors = F) # sc3 cluster info
newclusters = rep(0,ncol(scesetFiltered))
names(newclusters) = colnames(scesetFiltered)
newclusters[newclusters_45[,1]] = newclusters_45[,2]
newclusters = as.factor(newclusters)
newclusters_4567 = factor(newclusters[newclusters %in% c(1,2,3,4,5,6)])
seurat = CreateSeuratObject(CC_scaled_from_normlog2cd[,names(newclusters_4567)])
seurat@data = CC_scaled_from_normlog2cd[,names(newclusters_4567)]
seurat@scale.data = CC_scaled_from_normlog2cd[,names(newclusters_4567)]
#hirachial CC
deg_csv = read.csv("NL_PN_SL_markers.csv")
degene = as.vector(deg_csv[,2]) # EnsembleID
logcd = CC_scaled_from_normlog2cd[degene,names(newclusters_4567)]
logcd = logcd[rowMeans(logcd)>0,]
lognormcd_1 = rowMeans(logcd[,names(newclusters_4567)[newclusters_4567 == 1]])
lognormcd_2 = rowMeans(logcd[,names(newclusters_4567)[newclusters_4567 == 2]])
lognormcd_3 = rowMeans(logcd[,names(newclusters_4567)[newclusters_4567 == 3]])
lognormcd_4 = rowMeans(logcd[,names(newclusters_4567)[newclusters_4567 == 4]])
lognormcd_5 = rowMeans(logcd[,names(newclusters_4567)[newclusters_4567 == 5]])
lognormcd_6 = rowMeans(logcd[,names(newclusters_4567)[newclusters_4567 == 6]])
df = data.frame(c1=lognormcd_1,
c2=lognormcd_2,
c3=lognormcd_3,
c4=lognormcd_4,
c5=lognormcd_5,
c6=lognormcd_6)
hc <- hclust(Dist(t(df),method = "spearman"))
group1_ind = names(newclusters_4567)[newclusters_4567 %in% c(4,5)]
group2_ind = names(newclusters_4567)[newclusters_4567 %in% c(1,2,3)]
group3_ind = names(newclusters_4567)[newclusters_4567 %in% c(6)]
group_cluster = as.vector(newclusters_4567)
names(group_cluster) = names(newclusters_4567)
group_cluster[group1_ind] = "45"
group_cluster[group2_ind] = "123"
group_cluster[group3_ind] = "6"
seurat@ident = factor(group_cluster)
#
markers = FindAllMarkers(seurat)
degene =  subset(markers, p_val_adj < 0.05 & avg_logFC > log(1.5))$gene
degene = unique(subset(markers, p_val_adj < 0.05 & avg_logFC > log(1.5))$gene)
deGenes_table = subset(markers, p_val_adj < 0.05 & avg_logFC > log(1.5) & gene %in% degene)
deGenes_table_df = data.frame(deGenes_table$cluster,
deGenes_table$gene,
ensemblGenes[deGenes_table$gene,"external_gene_name"],
deGenes_table$pct.1,
deGenes_table$pct.2,
deGenes_table$avg_logFC,
deGenes_table$p_val_adj)
colnames(deGenes_table_df) = c("Cluster","Ensembl gene id", "Gene Symbol","expressed pct.in","expressed pct.out", "AvgLogFC","Adj. p-value")
head(deGenes_table_df)
seurat = CreateSeuratObject(CC_scaled_from_normlog2cd[,names(newclusters_4567)])
load( file="curve1_pseudotime_4_to_3_20190201.RData")
load( file="curve2_pseudotime_4_to_6_20190201.RData")
curve1_pseudotime_4_to_3 #path1
curve2_pseudotime_4_to_6 #path2
path1_cell_ind_sorted = names(sort(curve1_pseudotime_4_to_3))
path2_cell_ind_sorted = names(sort(curve2_pseudotime_4_to_6))
CC_scaled_gene_clustering = CC_scaled_from_normlog2cd[degene,] # CC scaled data using degene
CC_scaled_gene_clustering_path1 = CC_scaled_gene_clustering[,path1_cell_ind_sorted]
CC_scaled_gene_clustering_path2 = CC_scaled_gene_clustering[,path2_cell_ind_sorted]
df = data.frame(row.names= path1_cell_ind_sorted,
pseudotime = sort(curve1_pseudotime_4_to_3)
)
cd = CC_scaled_gene_clustering_path1
target_pseudotime = df$pseudotime
x = target_pseudotime/max(target_pseudotime)
X = seq(0.0, 1.0, length.out = length(colnames(CC_scaled_gene_clustering_path1)))
TSmat = matrix(data=NA, nrow=length(degene),
ncol=length(X), dimnames = list(degene, X))
for(i in degene){
y = cd[i,rownames(df)]
ls = loess(y ~ x, span=0.5)
Y_hat = predict(ls, X)
# TSmat[genename[i,"gene_symbol"],] = Y_hat  # use gene_symbol
TSmat[i,] = Y_hat
}
plot(CC_scaled_gene_clustering_path1[1,])
plot(TSmat[1,])
gg_color_hue(6)
as.vector(newclusters_4567[rownames(df)])
annotation_col = data.frame(
row.names = names(newclusters_4567[rownames(df)]),
CC4567.cluster = newclusters_4567[rownames(df)])
gg_color_hue(6)
ann_colors = list("CC4567.cluster" = c("1"="#F8766D",
"2"="#B79F00",
"3"="#00BA38",
"4"="#00BFC4",
"5"="#619CFF",
"6"="#F564E3"))
TSmat_colnames = TSmat
colnames(TSmat_colnames) = rownames(annotation_col)
set.seed(1)
