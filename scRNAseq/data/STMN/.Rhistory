source("https://bioconductor.org/biocLite.R")
biocLite("kstreet13/slingshot")
library(slingshot)
install.packages("Rcpp")
install.packages("dplyr")
library(slingshot)
install.packages("tidyr")
library(slingshot)
sessionInfo()
source("https://bioconductor.org/biocLite.R")
biocLite("slingshot")
source("https://bioconductor.org/biocLite.R")
biocLite("kstreet13/slingshot")
get.seed()
sample.int(.Machine$integer.max, 1)
sample.int(.Machine$integer.max, 1)
sample.int(.Machine$integer.max, 1)
sample.int(.Machine$integer.max, 1)
sample.int(.Machine$integer.max, 1)
sample.int(.Machine$integer.max, 1)
sample.int(.Machine$integer.max, 1)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DNAcopy", version = "3.8")
library(zoo)
sessionInfo()
seurat.qc.norm.rm.doublet.NA.11.14.TCR_RNA@ident[seurat.qc.norm.rm.doublet.NA.11.14.TCR_RNA@ident %in% c(10,13,17)
gene = read.csv("GeneList.txt",stringsAsFactors = F)[,1]
ensembl = rownames(ensemblGenes)[ensemblGenes$external_gene_name %in% gene]
rownames(ensemblGenes)[ensemblGenes$external_gene_name %in% "Trav11d"]
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_NKT_by_TCR = seurat.qc.norm.rm.doublet.NA.11.14@meta.data$celltype == "NKT"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_MAIT_by_TCR = seurat.qc.norm.rm.doublet.NA.11.14@meta.data$celltype == "MAIT"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_gdT_by_TCR = seurat.qc.norm.rm.doublet.NA.11.14@meta.data$celltype == "gdT"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_NA_by_TCR = seurat.qc.norm.rm.doublet.NA.11.14@meta.data$celltype == "NA"
# Cell(Trav11 > 0) & Cell(Trav11n > 0) & Cell(Trav11d > 0)
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_NKT_by_expr = seurat.qc.norm.rm.doublet.NA.11.14@scale.data["ENSMUSG00000096615",] > 0 &
seurat.qc.norm.rm.doublet.NA.11.14@scale.data["ENSMUSG00000106259",] > 0 &
seurat.qc.norm.rm.doublet.NA.11.14@scale.data["ENSMUSG00000095088",] > 0
# Cell(Trav1 > 0)
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_MAIT_by_expr = seurat.qc.norm.rm.doublet.NA.11.14@scale.data["ENSMUSG00000076758",] > 0
# Cell(Trgv2,Tcrg-V1~V7 >0) & Trdv*
Trgv = c("ENSMUSG00000076755","ENSMUSG00000076754","ENSMUSG00000076750","ENSMUSG00000076745",
"ENSMUSG00000076747","ENSMUSG00000076746","ENSMUSG00000076744")
Trdv = c("ENSMUSG00000076864","ENSMUSG00000076866","ENSMUSG00000076865","ENSMUSG00000105823",
"ENSMUSG00000076867","ENSMUSG00000076873")
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$cell_gdT_by_expr =colSums(as.matrix(seurat.qc.norm.rm.doublet.NA.11.14@scale.data[Trgv,]))> 0 &
colSums(as.matrix(seurat.qc.norm.rm.doublet.NA.11.14@scale.data[Trdv,])) > 0
View(seurat.qc.norm.rm.doublet.NA.11.14@meta.data[,c("cell_NKT_by_TCR",
"cell_MAIT_by_TCR",
"cell_gdT_by_TCR",
"cell_NKT_by_expr",
"cell_MAIT_by_expr",
"cell_gdT_by_expr")])
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NKT_by_TCR == FALSE &
cell_MAIT_by_TCR == F &
cell_gdT_by_TCR == F &
cell_NKT_by_expr == F &
cell_MAIT_by_expr == F &
cell_gdT_by_expr == F))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T &
cell_NKT_by_expr == T))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T &
cell_MAIT_by_expr == T))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T &
cell_gdT_by_expr == T))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NKT_by_TCR == T |
cell_NKT_by_expr == T))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_MAIT_by_TCR == T |
cell_MAIT_by_expr == T))
nrow(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_gdT_by_TCR == T |
cell_gdT_by_expr == T))
NKT_ind = c(rownames(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T &
cell_NKT_by_expr == T)),
rownames(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NKT_by_TCR == T |
cell_NKT_by_expr == T)))
MAIT_ind = c(rownames(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T &
cell_MAIT_by_expr == T)),
rownames(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_MAIT_by_TCR == T |
cell_MAIT_by_expr == T))
)
gdT_ind = c(rownames(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_NA_by_TCR == T &
cell_gdT_by_expr == T)),
rownames(subset(seurat.qc.norm.rm.doublet.NA.11.14@meta.data, cell_gdT_by_TCR == T |
cell_gdT_by_expr == T)))
df = data.frame(row.names= colnames(seurat.qc.norm.rm.doublet.NA.11.14@data),
NKT = colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% NKT_ind,
MAIT = colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% MAIT_ind,
gdT = colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% gdT_ind)
pdf("seurat.qc.norm.rm.doublet.NA.11.14_NEWcelltype_venn_diagram.pdf")
plot(euler(df), counts= TRUE,fontsize = 8,quantities = list(fontsize = 15))
dev.off()
colnames(seurat.qc.norm.rm.doublet.NA.11.14@data)[colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% NKT_ind]
colnames(seurat.qc.norm.rm.doublet.NA.11.14@data)[colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% MAIT_ind]
colnames(seurat.qc.norm.rm.doublet.NA.11.14@data)[colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% gdT_ind]
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$newCelltype = "NA"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$newCelltype[rownames(seurat.qc.norm.rm.doublet.NA.11.14@meta.data) %in% colnames(seurat.qc.norm.rm.doublet.NA.11.14@data)[colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% NKT_ind]
] = "NKT"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$newCelltype[rownames(seurat.qc.norm.rm.doublet.NA.11.14@meta.data) %in% colnames(seurat.qc.norm.rm.doublet.NA.11.14@data)[colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% MAIT_ind]
] = "MAIT"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$newCelltype[rownames(seurat.qc.norm.rm.doublet.NA.11.14@meta.data) %in% colnames(seurat.qc.norm.rm.doublet.NA.11.14@data)[colnames(seurat.qc.norm.rm.doublet.NA.11.14@data) %in% gdT_ind]
] = "gdT"
seurat.qc.norm.rm.doublet.NA.11.14@meta.data$newCelltype = factor(seurat.qc.norm.rm.doublet.NA.11.14@meta.data$newCelltype, levels = c("NKT", "MAIT","gdT", "NA"))
DimPlot(seurat.qc.norm.rm.doublet.NA.11.14, reduction.use="umap",group.by="newCelltype")  + ggsave("seurat.qc.norm.rm.doublet.NA.11.14_UMAPPlot_NEWcelltype.pdf")
seurat.qc.norm.rm.doublet.NA.11.14_newcelltype = seurat.qc.norm.rm.doublet.NA.11.14
save(seurat.qc.norm.rm.doublet.NA.11.14_newcelltype, file="seurat.qc.norm.rm.doublet.NA.11.14_newcelltype.RData")
seurat.qc.norm.rm.doublet.NA.11.14.TCR_RNA@ident[seurat.qc.norm.rm.doublet.NA.11.14.TCR_RNA@ident %in% c(10,13,17)]
devtools::install_github("hms-dbmi/conos")
devtools::install_github("hms-dbmi/conos")
library(WGCNA)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("impute", version = "3.8")
library(WGCNA)
.libPaths(c("C:/Users/user/Documents/R/win-library/3.5_seurat3", "C:/Program Files/R/R-3.5.2/library"  ))
.libPaths(c("C:/Users/user/Documents/R/win-library/3.5_seurat3", "C:/Program Files/R/R-3.5.2/library"  ))
install.packages('devtools')
devtools::install_github(repo = 'satijalab/seurat', ref = 'release/3.0')
devtools::install_github(repo = 'mgood2/seurat', ref = 'release/3.0')
devtools::install_github(repo = 'satijalab/seurat', ref = 'release/3.0')
devtools::install_github(repo = 'mgood2/seurat', ref = 'release/3.0')
devtools::install_github(repo = 'mgood2/seurat', ref = 'release/3.0')
library(umap)
library(amap)
sessionInfo()
?umap
install.packages("MDPtoolbox")
library(MDPtoolbox)
library(MDPtoolbox)
up <- matrix(c(   0,   0.2,   0,   0,
0.2, 0, 0,   0,
0.6, 0, 0, 0.2,
0,   0.6,   0.2,   0),
nrow=4, ncol=4, byrow=TRUE)
down <- matrix(c(   0,   0.2,   0.6,   0,
0.2, 0, 0,   0.6,
0, 0, 0, 0.2,
0,   0,   0.2,   0),
nrow=4, ncol=4, byrow=TRUE)
left <- matrix(c(   0,   0,   0.2,   0,
0.6, 0, 0,   0.2,
0.2, 0, 0, 0,
0,   0.2,   0.6,   0),
nrow=4, ncol=4, byrow=TRUE)
right <- matrix(c(   0,   0.6,   0.2,   0,
0, 0, 0,   0.2,
0.2, 0, 0, 0.6,
0,   0.2,   0,   0),
nrow=4, ncol=4, byrow=TRUE)
T <- list(up=up, left=left,
down=down, right=right)
R <- matrix(c(-1, -1, -1, -1,
-20, -20, -20, -20,
-1, -1, -1, -1,
50, 50, 50, 50),
nrow=4, ncol=4, byrow=TRUE)
mdp_check(T, R)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("scmap")
library(Stcr)
setwd("D:/Dropbox/stomach_isthmus_eunmin/github/CELL-STEM-CELL-isthmus-stem-cells/scRNAseq/source/STMN/2.trajectory")
##### Code for Stomach Single-cell stmn RNA-seq data
##### Author: Eunmin Lee (elee4472@dgist.ac.kr)
##### Last Update: 2019/07/04
library(scater)
library(diffusionMap)
library(slingshot)
# library(M3Drop)
library(dplyr)
data_path = "../../../data/STMN"
setwd(data_path)
PERPLEXITY =50
scesetFiltered = readRDS(file =paste0("scsetFilteredTSNEP",PERPLEXITY,".rds"))
load(file = "sc3set.RData")
newclusters = sc3set@colData$sc3_9_clusters
# m3dgenes method
# m3dGenes <- as.character(
#   M3DropDifferentialExpression(assay(scesetFiltered,"logcounts")[rowSums(exprs(scesetFiltered)) > 0,])$Gene
# )
load("markers_using_seurat.RData")
deGenes_using_seurat = unique(markers[markers[,2]>log(1.5) & markers[,5] < 0.05,7])
isthmus.DE = assay(scesetFiltered,"logcounts")[deGenes_using_seurat,]
load("isthmus.DE.DM.RData")
load("isthmus.DE.DM.RData")
df = data.frame(x=isthmus.DE.DM$X[, 1],
y=isthmus.DE.DM$X[, 2],
expression=newclusters)
centers = data.frame(df %>% dplyr::group_by(expression) %>% summarize(x = median(x = x),
y = median(x = y)))
ggplot() +
geom_point(data=df, size=1, aes(x=x, y=y, colour=expression)) +
ylab("Component 2") +
xlab("Component 1") +
theme_bw() +
guides(colour = guide_legend(override.aes = list(size=3))) +
theme(
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
plot.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line = element_blank(),
axis.ticks=element_blank(),
legend.text=element_text(size=20),
legend.title=element_blank(),
legend.key=element_blank()
) +
geom_text(data = centers,
mapping = aes(x = x, y = y, label = expression),
size = 10, col = "black")
lineages <- getLineages(isthmus.DE.DM$X,
newclusters
, start.clus = '6', end.clus = c("1","2"))
lineages <- getCurves(lineages)
publication_color = c("1"="#F8766D",
"2"="#D39200",
"3"="#93AA00",
"4"="#00BA38",
"5"="#00C19F",
"6"="#00B9E3",
"7"="#619CFF",
"8"="#DB72FB",
"9"="#FF61C3")
clust_col= newclusters
levels(clust_col)[levels(clust_col) == names(publication_color)] = publication_color
plot(isthmus.DE.DM$X[, 1],isthmus.DE.DM$X[, 2],col = as.vector(clust_col),pch=19)
lines(lineages@curves$curve1)
lines(lineages@curves$curve2)
##### Code for Stomach Single-cell stmn RNA-seq data
##### Author: Eunmin Lee (elee4472@dgist.ac.kr)
##### Last Update: 2019/07/04
library(scater)
library(reshape2)
library(ggplot2)
library(zoo)
library(slingshot)
data_path = "../../../data/STMN"
setwd(data_path)
PERPLEXITY =50
scesetFiltered = readRDS(file =paste0("scsetFilteredTSNEP",PERPLEXITY,".rds"))
load(file = "sc3set.RData")
load("ensemblGenes2017-10-30.RData")
newclusters = sc3set@colData$sc3_9_clusters
load("isthmus.lineages.RData")
geneList_sym = c("Mki67","Stmn1", "Muc6", "Muc5ac")
geneList = ensemblGenes$ensembl_gene_id[which(ensemblGenes$external_gene_name %in% geneList_sym)]
cd = assay(scesetFiltered,"logcounts")
cd_zscore = t(scale(t(cd)))
lambdas = slingPseudotime(lineages)
features.plot = geneList
# annotation bar
t=lambdas[,1]
publication_color = c("1"="#F8766D",
"2"="#D39200",
"3"="#93AA00",
"4"="#00BA38",
"5"="#00C19F",
"6"="#00B9E3",
"7"="#619CFF",
"8"="#DB72FB",
"9"="#FF61C3")
color_list = list(C = publication_color)
annotation = factor(newclusters[order(t, na.last = NA)])
annotdf = data.frame(row.names = colnames(cd)[order(t, na.last = NA)], C= annotation)
ha = ComplexHeatmap::HeatmapAnnotation(df = annotdf, col = color_list)
t=  lambdas[,3]
publication_color = c("1"="#F8766D",
"2"="#D39200",
"3"="#93AA00",
"4"="#00BA38",
"5"="#00C19F",
"6"="#00B9E3",
"7"="#619CFF",
"8"="#DB72FB",
"9"="#FF61C3")
color_list = list(C = publication_color)
annotation = factor(newclusters[order(t, na.last = NA)])
annotdf = data.frame(row.names = colnames(cd)[order(t, na.last = NA)], C= annotation)
ha = ComplexHeatmap::HeatmapAnnotation(df = annotdf, col = color_list)
t=  lambdas[,1]
sorted_cellname = colnames(cd)[order(t, na.last = NA)]
path1_cellname = sorted_cellname[150:190]
features.plot = geneList
control_cluster = factor(sc3set@colData$sc3_9_clusters[!is.na(lambdas[,1])])
TSmat = matrix(data=NA, nrow=length(features.plot),
ncol=length(colnames(cd[,!is.na(lambdas[,1])])), dimnames = list(features.plot, colnames(cd_zscore[,!is.na(lambdas[,1])])))
rownames(TSmat) = ensemblGenes[features.plot,"external_gene_name"]
for(i in features.plot){
y = cd[i,order(t, na.last = NA)]
Y_hat = rollapply(y,30, mean, align = 'center',fill = 'extend')
TSmat[ensemblGenes[i,"external_gene_name"],] = Y_hat
}
df.TSmat = data.frame(t(TSmat), x = 1:length(colnames(cd_zscore[,!is.na(lambdas[,1])])))
df.TSmat.long <- melt(df.TSmat, id=c("x"))
setwd(figure_path)
ggplot(data = df.TSmat.long, aes(x=x, y=value, color=variable)) +
geom_line() +
ylab("exprs") +
xlab("Cell order") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.position = "right",
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
t=  lambdas[,3]
sorted_cellname = colnames(cd)[order(t, na.last = NA)]
path2_cellname = sorted_cellname[150:200]
features.plot = geneList
control_cluster = factor(sc3set@colData$sc3_9_clusters[!is.na(lambdas[,3])])
TSmat = matrix(data=NA, nrow=length(features.plot),
ncol=length(colnames(cd[,!is.na(lambdas[,3])])), dimnames = list(features.plot, colnames(cd_zscore[,!is.na(lambdas[,3])])))
rownames(TSmat) = ensemblGenes[features.plot,"external_gene_name"]
for(i in features.plot){
y = cd[i,order(t, na.last = NA)]
Y_hat = rollapply(y,30, mean, align = 'center',fill = 'extend')
TSmat[ensemblGenes[i,"external_gene_name"],] = Y_hat
}
df.TSmat = data.frame(t(TSmat), x = 1:length(colnames(cd_zscore[,!is.na(lambdas[,3])])))
df.TSmat.long <- melt(df.TSmat, id=c("x"))
ggplot(data = df.TSmat.long, aes(x=x, y=value, color=variable)) +
geom_line() +
ylab("exprs") +
xlab("Cell order") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.position = "right",
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
t=  lambdas[,1]
features.plot = geneList
control_cluster = factor(sc3set@colData$sc3_9_clusters[!is.na(t)])
TSmat = matrix(data=NA, nrow=length(features.plot),
ncol=length(colnames(cd_zscore[,!is.na(t)])), dimnames = list(features.plot, colnames(cd_zscore[,!is.na(t)])))
rownames(TSmat) = ensemblGenes[features.plot,"external_gene_name"]
for(i in features.plot){
y = cd_zscore[i,order(t, na.last = NA)]
Y_hat = rollapply(y,50, mean, align = 'center',fill = 'extend')
TSmat[ensemblGenes[i,"external_gene_name"],] = Y_hat
}
df.TSmat = data.frame(t(TSmat), x = 1:length(colnames(cd_zscore[,!is.na(t)])))
df.TSmat.long <- melt(df.TSmat, id=c("x"))
ggplot(data = df.TSmat.long, aes(x=x, y=value, color=variable)) +
geom_line() +
ylab("exprs") +
xlab("Cell order") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.position = "right",
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
t=  lambdas[,3]
features.plot = geneList
control_cluster = factor(sc3set@colData$sc3_9_clusters[!is.na(t)])
TSmat = matrix(data=NA, nrow=length(features.plot),
ncol=length(colnames(cd_zscore[,!is.na(t)])), dimnames = list(features.plot, colnames(cd_zscore[,!is.na(t)])))
rownames(TSmat) = ensemblGenes[features.plot,"external_gene_name"]
for(i in features.plot){
y = cd_zscore[i,order(t, na.last = NA)]
Y_hat = rollapply(y,50, mean, align = 'center',fill = 'extend')
TSmat[ensemblGenes[i,"external_gene_name"],] = Y_hat
}
df.TSmat = data.frame(t(TSmat), x = 1:length(colnames(cd_zscore[,!is.na(lambdas[,3])])))
df.TSmat.long <- melt(df.TSmat, id=c("x"))
ggplot(data = df.TSmat.long, aes(x=x, y=value, color=variable)) +
geom_line() +
ylab("exprs") +
xlab("Cell order") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.position = "right",
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
ggplot(data = df.TSmat.long, aes(x=x, y=value, color=variable)) +
geom_line() +
ylab("exprs") +
xlab("Cell order") +
theme_bw() +
theme(text = element_text(size=20),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.line=element_line(size=1),
axis.ticks=element_line(size=1),
legend.position = "right",
legend.text=element_text(size=10),
legend.title=element_blank(),
legend.key=element_blank(),
axis.text.x = element_text(size=20)
)
